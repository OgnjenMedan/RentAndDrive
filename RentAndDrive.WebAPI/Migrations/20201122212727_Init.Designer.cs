// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentAndDrive.WebAPI.Database;

namespace RentAndDrive.WebAPI.Migrations
{
    [DbContext(typeof(_190151Context))]
    [Migration("20201122212727_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Automobili", b =>
                {
                    b.Property<int>("AutomobilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojSjedista")
                        .HasColumnType("int");

                    b.Property<int>("BrojVrata")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("GodinaProizvodnje")
                        .HasColumnType("int");

                    b.Property<string>("Gorivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Snaga")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Transmisija")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AutomobilId");

                    b.HasIndex("ModelId");

                    b.ToTable("Automobili");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Gradovi", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Kupci", b =>
                {
                    b.Property<int>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KupacId");

                    b.HasIndex("GradId");

                    b.ToTable("Kupci");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Modeli", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("ProizvodjacId")
                        .HasColumnType("int");

                    b.HasKey("ModelId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Modeli");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomobilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("OcjenaId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("KupacId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Proizvodjaci", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjaci");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Racuni", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojRacuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DatumKreiranjaRacuna")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IznosRezervacijeAutomobila")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IznosSaPdv")
                        .HasColumnName("IznosSaPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Pdv")
                        .HasColumnName("PDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TrajanjeRerezvacije")
                        .HasColumnType("int");

                    b.HasKey("RacunId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Racuni");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.RegistracijeAutomobila", b =>
                {
                    b.Property<int>("RegistracijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomobilId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("KrajRegistracije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PocetakRegistracije")
                        .HasColumnType("datetime");

                    b.Property<int>("RadnikId")
                        .HasColumnType("int");

                    b.Property<string>("RegistarskeTablice")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RegistracijaId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("RadnikId");

                    b.ToTable("RegistracijeAutomobila");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomobilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKreiranjaRezervacije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumPovrata")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumPreuzimanja")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("KupacId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Automobili", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Modeli", "Model")
                        .WithMany("Automobili")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK_Automobili_Modeli")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Gradovi", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("Gradovi")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Gradovi_Drzave")
                        .IsRequired();
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisniciUloge_Korisnici")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAndDrive.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisniciUloge_Uloge")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Kupci", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Kupci")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Kupci_Gradovi");
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Modeli", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Proizvodjaci", "Proizvodjac")
                        .WithMany("Modeli")
                        .HasForeignKey("ProizvodjacId")
                        .HasConstraintName("FK_Modeli_Proizvodjaci")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Automobili", "Automobil")
                        .WithMany("Ocjene")
                        .HasForeignKey("AutomobilId")
                        .HasConstraintName("FK_Ocjene_Automobili")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentAndDrive.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Ocjene")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Ocjene_Kupci")
                        .IsRequired();
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Racuni", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("Racuni")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_Racuni_Rezervacije")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.RegistracijeAutomobila", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Automobili", "Automobil")
                        .WithMany("RegistracijeAutomobila")
                        .HasForeignKey("AutomobilId")
                        .HasConstraintName("FK_RegistracijeAutomobila_Automobili")
                        .IsRequired();

                    b.HasOne("RentAndDrive.WebAPI.Database.Korisnici", "Radnik")
                        .WithMany("RegistracijeAutomobila")
                        .HasForeignKey("RadnikId")
                        .HasConstraintName("FK_RegistracijeAutomobila_Korisnici")
                        .IsRequired();
                });

            modelBuilder.Entity("RentAndDrive.WebAPI.Database.Rezervacije", b =>
                {
                    b.HasOne("RentAndDrive.WebAPI.Database.Automobili", "Automobil")
                        .WithMany("Rezervacije")
                        .HasForeignKey("AutomobilId")
                        .HasConstraintName("FK_Rezervacije_Automobili")
                        .IsRequired();

                    b.HasOne("RentAndDrive.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Rezervacije_Kupci")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
